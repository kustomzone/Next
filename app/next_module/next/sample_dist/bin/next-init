#!/usr/bin/env node
'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _path = require('path');

var _minimist = require('minimist');

var _minimist2 = _interopRequireDefault(_minimist);

var _fs = require('mz/fs');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var argv = (0, _minimist2.default)(process.argv.slice(2), {
  alias: {
    h: 'help'
  },
  boolean: ['h']
});

var dir = (0, _path.resolve)(argv._[0] || '.');

(0, _fs.exists)((0, _path.join)(dir, 'package.json')).then(function () {
  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(present) {
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!((0, _path.basename)(dir) === 'pages')) {
              _context.next = 3;
              break;
            }

            console.warn('Your root directory is named "pages". This looks suspicious. You probably want to go one directory up.');
            return _context.abrupt('return');

          case 3:
            if (present) {
              _context.next = 6;
              break;
            }

            _context.next = 6;
            return (0, _fs.writeFile)((0, _path.join)(dir, 'package.json'), basePackage);

          case 6:
            _context.next = 8;
            return (0, _fs.exists)((0, _path.join)(dir, 'static'));

          case 8:
            if (_context.sent) {
              _context.next = 11;
              break;
            }

            _context.next = 11;
            return (0, _fs.mkdir)((0, _path.join)(dir, 'static'));

          case 11:
            _context.next = 13;
            return (0, _fs.exists)((0, _path.join)(dir, 'pages'));

          case 13:
            if (_context.sent) {
              _context.next = 18;
              break;
            }

            _context.next = 16;
            return (0, _fs.mkdir)((0, _path.join)(dir, 'pages'));

          case 16:
            _context.next = 18;
            return (0, _fs.writeFile)((0, _path.join)(dir, 'pages', 'index.js'), basePage);

          case 18:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}()).catch(function (err) {
  console.error(err);
  process.exit(1);
});

var basePackage = '{\n  "name": "my-app",\n  "description": "my app",\n  "dependencies": {\n    "next": "latest"\n  },\n  "scripts": {\n    "dev": "next",\n    "build": "next build",\n    "start": "next start"\n  }\n}';

var basePage = '\nimport React from \'react\'\nexport default () => <p>Hello, world</p>\n';